
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000004d0  00000544  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000040  00000000  00000000  00000558  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000039  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000237  00000000  00000000  000005d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000017c  00000000  00000000  00000808  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001f7  00000000  00000000  00000984  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000040  00000000  00000000  00000b7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000fa  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000be  00000000  00000000  00000cb6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include<avr/io.h>
#include<util/delay.h>
#include<7-segment.h>

int main(){
  82:	ef 92       	push	r14
  84:	ff 92       	push	r15
  86:	0f 93       	push	r16
  88:	1f 93       	push	r17
  8a:	df 93       	push	r29
  8c:	cf 93       	push	r28
  8e:	cd b7       	in	r28, 0x3d	; 61
  90:	de b7       	in	r29, 0x3e	; 62
  92:	64 97       	sbiw	r28, 0x14	; 20
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	f8 94       	cli
  98:	de bf       	out	0x3e, r29	; 62
  9a:	0f be       	out	0x3f, r0	; 63
  9c:	cd bf       	out	0x3d, r28	; 61

	DDRA=0b11111111;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	8a bb       	out	0x1a, r24	; 26
	DDRB=0b11111111;
  a2:	87 bb       	out	0x17, r24	; 23
	
	while(1){
	
	 int value[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7c,0x07,0x7f,0x6f};
  a4:	7e 01       	movw	r14, r28
  a6:	08 94       	sec
  a8:	e1 1c       	adc	r14, r1
  aa:	f1 1c       	adc	r15, r1
  ac:	d7 01       	movw	r26, r14
  ae:	e0 e6       	ldi	r30, 0x60	; 96
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	84 e1       	ldi	r24, 0x14	; 20
  b4:	01 90       	ld	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	81 50       	subi	r24, 0x01	; 1
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x32>
  bc:	00 e0       	ldi	r16, 0x00	; 0
  be:	10 e0       	ldi	r17, 0x00	; 0
		
		for(int i=0;i<45;i++){
			first_segment=i/10;
			second_segment=i%10;
			
			display(4,0x5b,30);
  c0:	84 e0       	ldi	r24, 0x04	; 4
  c2:	6b e5       	ldi	r22, 0x5B	; 91
  c4:	4e e1       	ldi	r20, 0x1E	; 30
  c6:	50 e0       	ldi	r21, 0x00	; 0
  c8:	0e 94 92 00 	call	0x124	; 0x124 <display>
			display(3,0x3f,30);
  cc:	83 e0       	ldi	r24, 0x03	; 3
  ce:	6f e3       	ldi	r22, 0x3F	; 63
  d0:	4e e1       	ldi	r20, 0x1E	; 30
  d2:	50 e0       	ldi	r21, 0x00	; 0
  d4:	0e 94 92 00 	call	0x124	; 0x124 <display>
			display(2,value[first_segment],30);
  d8:	c8 01       	movw	r24, r16
  da:	6a e0       	ldi	r22, 0x0A	; 10
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	0e 94 3f 02 	call	0x47e	; 0x47e <__divmodhi4>
  e2:	fb 01       	movw	r30, r22
  e4:	ee 0f       	add	r30, r30
  e6:	ff 1f       	adc	r31, r31
  e8:	ee 0d       	add	r30, r14
  ea:	ff 1d       	adc	r31, r15
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	60 81       	ld	r22, Z
  f0:	4e e1       	ldi	r20, 0x1E	; 30
  f2:	50 e0       	ldi	r21, 0x00	; 0
  f4:	0e 94 92 00 	call	0x124	; 0x124 <display>
			display(1,value[second_segment],30);
  f8:	c8 01       	movw	r24, r16
  fa:	6a e0       	ldi	r22, 0x0A	; 10
  fc:	70 e0       	ldi	r23, 0x00	; 0
  fe:	0e 94 3f 02 	call	0x47e	; 0x47e <__divmodhi4>
 102:	fc 01       	movw	r30, r24
 104:	ee 0f       	add	r30, r30
 106:	ff 1f       	adc	r31, r31
 108:	ee 0d       	add	r30, r14
 10a:	ff 1d       	adc	r31, r15
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	60 81       	ld	r22, Z
 110:	4e e1       	ldi	r20, 0x1E	; 30
 112:	50 e0       	ldi	r21, 0x00	; 0
 114:	0e 94 92 00 	call	0x124	; 0x124 <display>
	 int value[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7c,0x07,0x7f,0x6f};
	 int first_segment=0,second_segment=0;
			
		
		
		for(int i=0;i<45;i++){
 118:	0f 5f       	subi	r16, 0xFF	; 255
 11a:	1f 4f       	sbci	r17, 0xFF	; 255
 11c:	0d 32       	cpi	r16, 0x2D	; 45
 11e:	11 05       	cpc	r17, r1
 120:	79 f6       	brne	.-98     	; 0xc0 <main+0x3e>
 122:	c4 cf       	rjmp	.-120    	; 0xac <main+0x2a>

00000124 <display>:
#include<avr/io.h>
#include<util/delay.h>
void display(unsigned char seg , unsigned char data,int delay){
 124:	af 92       	push	r10
 126:	bf 92       	push	r11
 128:	cf 92       	push	r12
 12a:	df 92       	push	r13
 12c:	ef 92       	push	r14
 12e:	ff 92       	push	r15
 130:	0f 93       	push	r16
 132:	1f 93       	push	r17
 134:	7a 01       	movw	r14, r20
	
	PORTB = 0b11111111;
 136:	9f ef       	ldi	r25, 0xFF	; 255
 138:	98 bb       	out	0x18, r25	; 24
	PORTA= data;
 13a:	6b bb       	out	0x1b, r22	; 27
	PORTB = ~(1<<(seg-1));
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	21 e0       	ldi	r18, 0x01	; 1
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <display+0x26>
 146:	22 0f       	add	r18, r18
 148:	33 1f       	adc	r19, r19
 14a:	8a 95       	dec	r24
 14c:	e2 f7       	brpl	.-8      	; 0x146 <display+0x22>
 14e:	20 95       	com	r18
 150:	28 bb       	out	0x18, r18	; 24
	_delay_ms(delay);
 152:	00 27       	eor	r16, r16
 154:	f7 fc       	sbrc	r15, 7
 156:	00 95       	com	r16
 158:	10 2f       	mov	r17, r16
 15a:	c8 01       	movw	r24, r16
 15c:	b7 01       	movw	r22, r14
 15e:	0e 94 28 01 	call	0x250	; 0x250 <__floatsisf>
 162:	5b 01       	movw	r10, r22
 164:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 166:	20 e0       	ldi	r18, 0x00	; 0
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	4a ef       	ldi	r20, 0xFA	; 250
 16c:	54 e4       	ldi	r21, 0x44	; 68
 16e:	0e 94 b4 01 	call	0x368	; 0x368 <__mulsf3>
 172:	7b 01       	movw	r14, r22
 174:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	40 e8       	ldi	r20, 0x80	; 128
 17c:	5f e3       	ldi	r21, 0x3F	; 63
 17e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <__cmpsf2>
 182:	88 23       	and	r24, r24
 184:	1c f4       	brge	.+6      	; 0x18c <display+0x68>
 186:	61 e0       	ldi	r22, 0x01	; 1
 188:	70 e0       	ldi	r23, 0x00	; 0
 18a:	24 c0       	rjmp	.+72     	; 0x1d4 <display+0xb0>
		__ticks = 1;
	else if (__tmp > 65535)
 18c:	c8 01       	movw	r24, r16
 18e:	b7 01       	movw	r22, r14
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	3f ef       	ldi	r19, 0xFF	; 255
 194:	4f e7       	ldi	r20, 0x7F	; 127
 196:	57 e4       	ldi	r21, 0x47	; 71
 198:	0e 94 b0 01 	call	0x360	; 0x360 <__gesf2>
 19c:	18 16       	cp	r1, r24
 19e:	b4 f4       	brge	.+44     	; 0x1cc <display+0xa8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1a0:	c6 01       	movw	r24, r12
 1a2:	b5 01       	movw	r22, r10
 1a4:	20 e0       	ldi	r18, 0x00	; 0
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	40 e2       	ldi	r20, 0x20	; 32
 1aa:	51 e4       	ldi	r21, 0x41	; 65
 1ac:	0e 94 b4 01 	call	0x368	; 0x368 <__mulsf3>
 1b0:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1b4:	88 ec       	ldi	r24, 0xC8	; 200
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	05 c0       	rjmp	.+10     	; 0x1c4 <display+0xa0>
 1ba:	fc 01       	movw	r30, r24
 1bc:	31 97       	sbiw	r30, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <display+0x98>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c0:	61 50       	subi	r22, 0x01	; 1
 1c2:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1c4:	61 15       	cp	r22, r1
 1c6:	71 05       	cpc	r23, r1
 1c8:	c1 f7       	brne	.-16     	; 0x1ba <display+0x96>
 1ca:	07 c0       	rjmp	.+14     	; 0x1da <display+0xb6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1cc:	c8 01       	movw	r24, r16
 1ce:	b7 01       	movw	r22, r14
 1d0:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <__fixunssfsi>
 1d4:	cb 01       	movw	r24, r22
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <display+0xb2>
 1da:	1f 91       	pop	r17
 1dc:	0f 91       	pop	r16
 1de:	ff 90       	pop	r15
 1e0:	ef 90       	pop	r14
 1e2:	df 90       	pop	r13
 1e4:	cf 90       	pop	r12
 1e6:	bf 90       	pop	r11
 1e8:	af 90       	pop	r10
 1ea:	08 95       	ret

000001ec <__cmpsf2>:
 1ec:	6c d0       	rcall	.+216    	; 0x2c6 <__fp_cmp>
 1ee:	08 f4       	brcc	.+2      	; 0x1f2 <__cmpsf2+0x6>
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	08 95       	ret

000001f4 <__fixunssfsi>:
 1f4:	94 d0       	rcall	.+296    	; 0x31e <__fp_splitA>
 1f6:	88 f0       	brcs	.+34     	; 0x21a <__fixunssfsi+0x26>
 1f8:	9f 57       	subi	r25, 0x7F	; 127
 1fa:	90 f0       	brcs	.+36     	; 0x220 <__fixunssfsi+0x2c>
 1fc:	b9 2f       	mov	r27, r25
 1fe:	99 27       	eor	r25, r25
 200:	b7 51       	subi	r27, 0x17	; 23
 202:	a0 f0       	brcs	.+40     	; 0x22c <__fixunssfsi+0x38>
 204:	d1 f0       	breq	.+52     	; 0x23a <__fixunssfsi+0x46>
 206:	66 0f       	add	r22, r22
 208:	77 1f       	adc	r23, r23
 20a:	88 1f       	adc	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	1a f0       	brmi	.+6      	; 0x216 <__fixunssfsi+0x22>
 210:	ba 95       	dec	r27
 212:	c9 f7       	brne	.-14     	; 0x206 <__fixunssfsi+0x12>
 214:	12 c0       	rjmp	.+36     	; 0x23a <__fixunssfsi+0x46>
 216:	b1 30       	cpi	r27, 0x01	; 1
 218:	81 f0       	breq	.+32     	; 0x23a <__fixunssfsi+0x46>
 21a:	9b d0       	rcall	.+310    	; 0x352 <__fp_zero>
 21c:	b1 e0       	ldi	r27, 0x01	; 1
 21e:	08 95       	ret
 220:	98 c0       	rjmp	.+304    	; 0x352 <__fp_zero>
 222:	67 2f       	mov	r22, r23
 224:	78 2f       	mov	r23, r24
 226:	88 27       	eor	r24, r24
 228:	b8 5f       	subi	r27, 0xF8	; 248
 22a:	39 f0       	breq	.+14     	; 0x23a <__fixunssfsi+0x46>
 22c:	b9 3f       	cpi	r27, 0xF9	; 249
 22e:	cc f3       	brlt	.-14     	; 0x222 <__fixunssfsi+0x2e>
 230:	86 95       	lsr	r24
 232:	77 95       	ror	r23
 234:	67 95       	ror	r22
 236:	b3 95       	inc	r27
 238:	d9 f7       	brne	.-10     	; 0x230 <__fixunssfsi+0x3c>
 23a:	3e f4       	brtc	.+14     	; 0x24a <__fixunssfsi+0x56>
 23c:	90 95       	com	r25
 23e:	80 95       	com	r24
 240:	70 95       	com	r23
 242:	61 95       	neg	r22
 244:	7f 4f       	sbci	r23, 0xFF	; 255
 246:	8f 4f       	sbci	r24, 0xFF	; 255
 248:	9f 4f       	sbci	r25, 0xFF	; 255
 24a:	08 95       	ret

0000024c <__floatunsisf>:
 24c:	e8 94       	clt
 24e:	09 c0       	rjmp	.+18     	; 0x262 <__floatsisf+0x12>

00000250 <__floatsisf>:
 250:	97 fb       	bst	r25, 7
 252:	3e f4       	brtc	.+14     	; 0x262 <__floatsisf+0x12>
 254:	90 95       	com	r25
 256:	80 95       	com	r24
 258:	70 95       	com	r23
 25a:	61 95       	neg	r22
 25c:	7f 4f       	sbci	r23, 0xFF	; 255
 25e:	8f 4f       	sbci	r24, 0xFF	; 255
 260:	9f 4f       	sbci	r25, 0xFF	; 255
 262:	99 23       	and	r25, r25
 264:	a9 f0       	breq	.+42     	; 0x290 <__floatsisf+0x40>
 266:	f9 2f       	mov	r31, r25
 268:	96 e9       	ldi	r25, 0x96	; 150
 26a:	bb 27       	eor	r27, r27
 26c:	93 95       	inc	r25
 26e:	f6 95       	lsr	r31
 270:	87 95       	ror	r24
 272:	77 95       	ror	r23
 274:	67 95       	ror	r22
 276:	b7 95       	ror	r27
 278:	f1 11       	cpse	r31, r1
 27a:	f8 cf       	rjmp	.-16     	; 0x26c <__floatsisf+0x1c>
 27c:	fa f4       	brpl	.+62     	; 0x2bc <__floatsisf+0x6c>
 27e:	bb 0f       	add	r27, r27
 280:	11 f4       	brne	.+4      	; 0x286 <__floatsisf+0x36>
 282:	60 ff       	sbrs	r22, 0
 284:	1b c0       	rjmp	.+54     	; 0x2bc <__floatsisf+0x6c>
 286:	6f 5f       	subi	r22, 0xFF	; 255
 288:	7f 4f       	sbci	r23, 0xFF	; 255
 28a:	8f 4f       	sbci	r24, 0xFF	; 255
 28c:	9f 4f       	sbci	r25, 0xFF	; 255
 28e:	16 c0       	rjmp	.+44     	; 0x2bc <__floatsisf+0x6c>
 290:	88 23       	and	r24, r24
 292:	11 f0       	breq	.+4      	; 0x298 <__floatsisf+0x48>
 294:	96 e9       	ldi	r25, 0x96	; 150
 296:	11 c0       	rjmp	.+34     	; 0x2ba <__floatsisf+0x6a>
 298:	77 23       	and	r23, r23
 29a:	21 f0       	breq	.+8      	; 0x2a4 <__floatsisf+0x54>
 29c:	9e e8       	ldi	r25, 0x8E	; 142
 29e:	87 2f       	mov	r24, r23
 2a0:	76 2f       	mov	r23, r22
 2a2:	05 c0       	rjmp	.+10     	; 0x2ae <__floatsisf+0x5e>
 2a4:	66 23       	and	r22, r22
 2a6:	71 f0       	breq	.+28     	; 0x2c4 <__floatsisf+0x74>
 2a8:	96 e8       	ldi	r25, 0x86	; 134
 2aa:	86 2f       	mov	r24, r22
 2ac:	70 e0       	ldi	r23, 0x00	; 0
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	2a f0       	brmi	.+10     	; 0x2bc <__floatsisf+0x6c>
 2b2:	9a 95       	dec	r25
 2b4:	66 0f       	add	r22, r22
 2b6:	77 1f       	adc	r23, r23
 2b8:	88 1f       	adc	r24, r24
 2ba:	da f7       	brpl	.-10     	; 0x2b2 <__floatsisf+0x62>
 2bc:	88 0f       	add	r24, r24
 2be:	96 95       	lsr	r25
 2c0:	87 95       	ror	r24
 2c2:	97 f9       	bld	r25, 7
 2c4:	08 95       	ret

000002c6 <__fp_cmp>:
 2c6:	99 0f       	add	r25, r25
 2c8:	00 08       	sbc	r0, r0
 2ca:	55 0f       	add	r21, r21
 2cc:	aa 0b       	sbc	r26, r26
 2ce:	e0 e8       	ldi	r30, 0x80	; 128
 2d0:	fe ef       	ldi	r31, 0xFE	; 254
 2d2:	16 16       	cp	r1, r22
 2d4:	17 06       	cpc	r1, r23
 2d6:	e8 07       	cpc	r30, r24
 2d8:	f9 07       	cpc	r31, r25
 2da:	c0 f0       	brcs	.+48     	; 0x30c <__fp_cmp+0x46>
 2dc:	12 16       	cp	r1, r18
 2de:	13 06       	cpc	r1, r19
 2e0:	e4 07       	cpc	r30, r20
 2e2:	f5 07       	cpc	r31, r21
 2e4:	98 f0       	brcs	.+38     	; 0x30c <__fp_cmp+0x46>
 2e6:	62 1b       	sub	r22, r18
 2e8:	73 0b       	sbc	r23, r19
 2ea:	84 0b       	sbc	r24, r20
 2ec:	95 0b       	sbc	r25, r21
 2ee:	39 f4       	brne	.+14     	; 0x2fe <__fp_cmp+0x38>
 2f0:	0a 26       	eor	r0, r26
 2f2:	61 f0       	breq	.+24     	; 0x30c <__fp_cmp+0x46>
 2f4:	23 2b       	or	r18, r19
 2f6:	24 2b       	or	r18, r20
 2f8:	25 2b       	or	r18, r21
 2fa:	21 f4       	brne	.+8      	; 0x304 <__fp_cmp+0x3e>
 2fc:	08 95       	ret
 2fe:	0a 26       	eor	r0, r26
 300:	09 f4       	brne	.+2      	; 0x304 <__fp_cmp+0x3e>
 302:	a1 40       	sbci	r26, 0x01	; 1
 304:	a6 95       	lsr	r26
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	81 1d       	adc	r24, r1
 30a:	81 1d       	adc	r24, r1
 30c:	08 95       	ret

0000030e <__fp_split3>:
 30e:	57 fd       	sbrc	r21, 7
 310:	90 58       	subi	r25, 0x80	; 128
 312:	44 0f       	add	r20, r20
 314:	55 1f       	adc	r21, r21
 316:	59 f0       	breq	.+22     	; 0x32e <__fp_splitA+0x10>
 318:	5f 3f       	cpi	r21, 0xFF	; 255
 31a:	71 f0       	breq	.+28     	; 0x338 <__fp_splitA+0x1a>
 31c:	47 95       	ror	r20

0000031e <__fp_splitA>:
 31e:	88 0f       	add	r24, r24
 320:	97 fb       	bst	r25, 7
 322:	99 1f       	adc	r25, r25
 324:	61 f0       	breq	.+24     	; 0x33e <__fp_splitA+0x20>
 326:	9f 3f       	cpi	r25, 0xFF	; 255
 328:	79 f0       	breq	.+30     	; 0x348 <__fp_splitA+0x2a>
 32a:	87 95       	ror	r24
 32c:	08 95       	ret
 32e:	12 16       	cp	r1, r18
 330:	13 06       	cpc	r1, r19
 332:	14 06       	cpc	r1, r20
 334:	55 1f       	adc	r21, r21
 336:	f2 cf       	rjmp	.-28     	; 0x31c <__fp_split3+0xe>
 338:	46 95       	lsr	r20
 33a:	f1 df       	rcall	.-30     	; 0x31e <__fp_splitA>
 33c:	08 c0       	rjmp	.+16     	; 0x34e <__fp_splitA+0x30>
 33e:	16 16       	cp	r1, r22
 340:	17 06       	cpc	r1, r23
 342:	18 06       	cpc	r1, r24
 344:	99 1f       	adc	r25, r25
 346:	f1 cf       	rjmp	.-30     	; 0x32a <__fp_splitA+0xc>
 348:	86 95       	lsr	r24
 34a:	71 05       	cpc	r23, r1
 34c:	61 05       	cpc	r22, r1
 34e:	08 94       	sec
 350:	08 95       	ret

00000352 <__fp_zero>:
 352:	e8 94       	clt

00000354 <__fp_szero>:
 354:	bb 27       	eor	r27, r27
 356:	66 27       	eor	r22, r22
 358:	77 27       	eor	r23, r23
 35a:	cb 01       	movw	r24, r22
 35c:	97 f9       	bld	r25, 7
 35e:	08 95       	ret

00000360 <__gesf2>:
 360:	b2 df       	rcall	.-156    	; 0x2c6 <__fp_cmp>
 362:	08 f4       	brcc	.+2      	; 0x366 <__gesf2+0x6>
 364:	8f ef       	ldi	r24, 0xFF	; 255
 366:	08 95       	ret

00000368 <__mulsf3>:
 368:	0b d0       	rcall	.+22     	; 0x380 <__mulsf3x>
 36a:	78 c0       	rjmp	.+240    	; 0x45c <__fp_round>
 36c:	69 d0       	rcall	.+210    	; 0x440 <__fp_pscA>
 36e:	28 f0       	brcs	.+10     	; 0x37a <__mulsf3+0x12>
 370:	6e d0       	rcall	.+220    	; 0x44e <__fp_pscB>
 372:	18 f0       	brcs	.+6      	; 0x37a <__mulsf3+0x12>
 374:	95 23       	and	r25, r21
 376:	09 f0       	breq	.+2      	; 0x37a <__mulsf3+0x12>
 378:	5a c0       	rjmp	.+180    	; 0x42e <__fp_inf>
 37a:	5f c0       	rjmp	.+190    	; 0x43a <__fp_nan>
 37c:	11 24       	eor	r1, r1
 37e:	ea cf       	rjmp	.-44     	; 0x354 <__fp_szero>

00000380 <__mulsf3x>:
 380:	c6 df       	rcall	.-116    	; 0x30e <__fp_split3>
 382:	a0 f3       	brcs	.-24     	; 0x36c <__mulsf3+0x4>

00000384 <__mulsf3_pse>:
 384:	95 9f       	mul	r25, r21
 386:	d1 f3       	breq	.-12     	; 0x37c <__mulsf3+0x14>
 388:	95 0f       	add	r25, r21
 38a:	50 e0       	ldi	r21, 0x00	; 0
 38c:	55 1f       	adc	r21, r21
 38e:	62 9f       	mul	r22, r18
 390:	f0 01       	movw	r30, r0
 392:	72 9f       	mul	r23, r18
 394:	bb 27       	eor	r27, r27
 396:	f0 0d       	add	r31, r0
 398:	b1 1d       	adc	r27, r1
 39a:	63 9f       	mul	r22, r19
 39c:	aa 27       	eor	r26, r26
 39e:	f0 0d       	add	r31, r0
 3a0:	b1 1d       	adc	r27, r1
 3a2:	aa 1f       	adc	r26, r26
 3a4:	64 9f       	mul	r22, r20
 3a6:	66 27       	eor	r22, r22
 3a8:	b0 0d       	add	r27, r0
 3aa:	a1 1d       	adc	r26, r1
 3ac:	66 1f       	adc	r22, r22
 3ae:	82 9f       	mul	r24, r18
 3b0:	22 27       	eor	r18, r18
 3b2:	b0 0d       	add	r27, r0
 3b4:	a1 1d       	adc	r26, r1
 3b6:	62 1f       	adc	r22, r18
 3b8:	73 9f       	mul	r23, r19
 3ba:	b0 0d       	add	r27, r0
 3bc:	a1 1d       	adc	r26, r1
 3be:	62 1f       	adc	r22, r18
 3c0:	83 9f       	mul	r24, r19
 3c2:	a0 0d       	add	r26, r0
 3c4:	61 1d       	adc	r22, r1
 3c6:	22 1f       	adc	r18, r18
 3c8:	74 9f       	mul	r23, r20
 3ca:	33 27       	eor	r19, r19
 3cc:	a0 0d       	add	r26, r0
 3ce:	61 1d       	adc	r22, r1
 3d0:	23 1f       	adc	r18, r19
 3d2:	84 9f       	mul	r24, r20
 3d4:	60 0d       	add	r22, r0
 3d6:	21 1d       	adc	r18, r1
 3d8:	82 2f       	mov	r24, r18
 3da:	76 2f       	mov	r23, r22
 3dc:	6a 2f       	mov	r22, r26
 3de:	11 24       	eor	r1, r1
 3e0:	9f 57       	subi	r25, 0x7F	; 127
 3e2:	50 40       	sbci	r21, 0x00	; 0
 3e4:	8a f0       	brmi	.+34     	; 0x408 <__mulsf3_pse+0x84>
 3e6:	e1 f0       	breq	.+56     	; 0x420 <__mulsf3_pse+0x9c>
 3e8:	88 23       	and	r24, r24
 3ea:	4a f0       	brmi	.+18     	; 0x3fe <__mulsf3_pse+0x7a>
 3ec:	ee 0f       	add	r30, r30
 3ee:	ff 1f       	adc	r31, r31
 3f0:	bb 1f       	adc	r27, r27
 3f2:	66 1f       	adc	r22, r22
 3f4:	77 1f       	adc	r23, r23
 3f6:	88 1f       	adc	r24, r24
 3f8:	91 50       	subi	r25, 0x01	; 1
 3fa:	50 40       	sbci	r21, 0x00	; 0
 3fc:	a9 f7       	brne	.-22     	; 0x3e8 <__mulsf3_pse+0x64>
 3fe:	9e 3f       	cpi	r25, 0xFE	; 254
 400:	51 05       	cpc	r21, r1
 402:	70 f0       	brcs	.+28     	; 0x420 <__mulsf3_pse+0x9c>
 404:	14 c0       	rjmp	.+40     	; 0x42e <__fp_inf>
 406:	a6 cf       	rjmp	.-180    	; 0x354 <__fp_szero>
 408:	5f 3f       	cpi	r21, 0xFF	; 255
 40a:	ec f3       	brlt	.-6      	; 0x406 <__mulsf3_pse+0x82>
 40c:	98 3e       	cpi	r25, 0xE8	; 232
 40e:	dc f3       	brlt	.-10     	; 0x406 <__mulsf3_pse+0x82>
 410:	86 95       	lsr	r24
 412:	77 95       	ror	r23
 414:	67 95       	ror	r22
 416:	b7 95       	ror	r27
 418:	f7 95       	ror	r31
 41a:	e7 95       	ror	r30
 41c:	9f 5f       	subi	r25, 0xFF	; 255
 41e:	c1 f7       	brne	.-16     	; 0x410 <__mulsf3_pse+0x8c>
 420:	fe 2b       	or	r31, r30
 422:	88 0f       	add	r24, r24
 424:	91 1d       	adc	r25, r1
 426:	96 95       	lsr	r25
 428:	87 95       	ror	r24
 42a:	97 f9       	bld	r25, 7
 42c:	08 95       	ret

0000042e <__fp_inf>:
 42e:	97 f9       	bld	r25, 7
 430:	9f 67       	ori	r25, 0x7F	; 127
 432:	80 e8       	ldi	r24, 0x80	; 128
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	60 e0       	ldi	r22, 0x00	; 0
 438:	08 95       	ret

0000043a <__fp_nan>:
 43a:	9f ef       	ldi	r25, 0xFF	; 255
 43c:	80 ec       	ldi	r24, 0xC0	; 192
 43e:	08 95       	ret

00000440 <__fp_pscA>:
 440:	00 24       	eor	r0, r0
 442:	0a 94       	dec	r0
 444:	16 16       	cp	r1, r22
 446:	17 06       	cpc	r1, r23
 448:	18 06       	cpc	r1, r24
 44a:	09 06       	cpc	r0, r25
 44c:	08 95       	ret

0000044e <__fp_pscB>:
 44e:	00 24       	eor	r0, r0
 450:	0a 94       	dec	r0
 452:	12 16       	cp	r1, r18
 454:	13 06       	cpc	r1, r19
 456:	14 06       	cpc	r1, r20
 458:	05 06       	cpc	r0, r21
 45a:	08 95       	ret

0000045c <__fp_round>:
 45c:	09 2e       	mov	r0, r25
 45e:	03 94       	inc	r0
 460:	00 0c       	add	r0, r0
 462:	11 f4       	brne	.+4      	; 0x468 <__fp_round+0xc>
 464:	88 23       	and	r24, r24
 466:	52 f0       	brmi	.+20     	; 0x47c <__fp_round+0x20>
 468:	bb 0f       	add	r27, r27
 46a:	40 f4       	brcc	.+16     	; 0x47c <__fp_round+0x20>
 46c:	bf 2b       	or	r27, r31
 46e:	11 f4       	brne	.+4      	; 0x474 <__fp_round+0x18>
 470:	60 ff       	sbrs	r22, 0
 472:	04 c0       	rjmp	.+8      	; 0x47c <__fp_round+0x20>
 474:	6f 5f       	subi	r22, 0xFF	; 255
 476:	7f 4f       	sbci	r23, 0xFF	; 255
 478:	8f 4f       	sbci	r24, 0xFF	; 255
 47a:	9f 4f       	sbci	r25, 0xFF	; 255
 47c:	08 95       	ret

0000047e <__divmodhi4>:
 47e:	97 fb       	bst	r25, 7
 480:	09 2e       	mov	r0, r25
 482:	07 26       	eor	r0, r23
 484:	0a d0       	rcall	.+20     	; 0x49a <__divmodhi4_neg1>
 486:	77 fd       	sbrc	r23, 7
 488:	04 d0       	rcall	.+8      	; 0x492 <__divmodhi4_neg2>
 48a:	0c d0       	rcall	.+24     	; 0x4a4 <__udivmodhi4>
 48c:	06 d0       	rcall	.+12     	; 0x49a <__divmodhi4_neg1>
 48e:	00 20       	and	r0, r0
 490:	1a f4       	brpl	.+6      	; 0x498 <__divmodhi4_exit>

00000492 <__divmodhi4_neg2>:
 492:	70 95       	com	r23
 494:	61 95       	neg	r22
 496:	7f 4f       	sbci	r23, 0xFF	; 255

00000498 <__divmodhi4_exit>:
 498:	08 95       	ret

0000049a <__divmodhi4_neg1>:
 49a:	f6 f7       	brtc	.-4      	; 0x498 <__divmodhi4_exit>
 49c:	90 95       	com	r25
 49e:	81 95       	neg	r24
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	08 95       	ret

000004a4 <__udivmodhi4>:
 4a4:	aa 1b       	sub	r26, r26
 4a6:	bb 1b       	sub	r27, r27
 4a8:	51 e1       	ldi	r21, 0x11	; 17
 4aa:	07 c0       	rjmp	.+14     	; 0x4ba <__udivmodhi4_ep>

000004ac <__udivmodhi4_loop>:
 4ac:	aa 1f       	adc	r26, r26
 4ae:	bb 1f       	adc	r27, r27
 4b0:	a6 17       	cp	r26, r22
 4b2:	b7 07       	cpc	r27, r23
 4b4:	10 f0       	brcs	.+4      	; 0x4ba <__udivmodhi4_ep>
 4b6:	a6 1b       	sub	r26, r22
 4b8:	b7 0b       	sbc	r27, r23

000004ba <__udivmodhi4_ep>:
 4ba:	88 1f       	adc	r24, r24
 4bc:	99 1f       	adc	r25, r25
 4be:	5a 95       	dec	r21
 4c0:	a9 f7       	brne	.-22     	; 0x4ac <__udivmodhi4_loop>
 4c2:	80 95       	com	r24
 4c4:	90 95       	com	r25
 4c6:	bc 01       	movw	r22, r24
 4c8:	cd 01       	movw	r24, r26
 4ca:	08 95       	ret

000004cc <_exit>:
 4cc:	f8 94       	cli

000004ce <__stop_program>:
 4ce:	ff cf       	rjmp	.-2      	; 0x4ce <__stop_program>
